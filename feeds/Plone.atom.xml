<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alex Clark - Python Web Developer &amp; Musician</title><link href="http://blog.aclark.net/" rel="alternate"></link><link href="http://blog.aclark.net/feeds/plone.atom.xml" rel="self"></link><id>http://blog.aclark.net/</id><updated>2015-06-01T19:30:27-04:00</updated><entry><title>Plone Add-On Development For Command-Line Savvy Developers</title><link href="http://blog.aclark.net/2015/06/01/plone-add-on-development-for-command-line-savvy-developers/" rel="alternate"></link><updated>2015-06-01T19:30:27-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-06-01:2015/06/01/plone-add-on-development-for-command-line-savvy-developers/</id><summary type="html">&lt;p&gt;With Plone 5 heating up, it's time for me to go &amp;quot;all in&amp;quot; on Plone again. To that end, here's a new tutorial for &amp;quot;Unix Hackers&amp;quot;; i.e. &lt;strong&gt;command-line savvy developers who may be totally unfamiliar with Python but want to learn Plone&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This time, in the form of an embedded Gist!&lt;/p&gt;
&lt;script src="https://gist.github.com/aclark4life/ffcea3a79b6339591c24.js"&gt;&lt;/script&gt;&lt;p&gt;Check out the results here: &lt;a class="reference external" href="https://github.com/aclark4life/Plone-Add-On-Development-For-Command-Line-Savvy-Developers"&gt;https://github.com/aclark4life/Plone-Add-On-Development-For-Command-Line-Savvy-Developers&lt;/a&gt;&lt;/p&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>Plock Rocks</title><link href="http://blog.aclark.net/2015/04/26/plock-rocks/" rel="alternate"></link><updated>2015-04-26T18:10:00-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-04-26:2015/04/26/plock-rocks/</id><summary type="html">&lt;img alt="Plock Meme" class="align-center" src="/images/plock-meme.png" /&gt;
&lt;p&gt;&lt;em&gt;Plock is a Plone installer for the pip-loving crowd. Plone is the ultimate open source enterprise CMS.&lt;/em&gt;&lt;/p&gt;
&lt;div class="section" id="understanding-plock"&gt;
&lt;h2&gt;Understanding Plock&lt;/h2&gt;
&lt;p&gt;To understand Plock you must understand a few things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The complexity of the Plone stack &lt;a class="footnote-reference" href="#id15" id="id1"&gt;[1]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;My desire to simplify, clarify and reduce-to-bare-elements everything I touch.&lt;/li&gt;
&lt;li&gt;My willingness to mask complexity when eliminating it is not possible, despite the risk of contributing to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pyramid author Chris McDonough &lt;a class="footnote-reference" href="#id16" id="id2"&gt;[2]&lt;/a&gt; once made a comment a long time ago to the effect: &amp;quot;Let's stop piling more crap on top of Plone&amp;quot; and that sentiment still resonates today. That's why even though I love small and useful tools like Plock, it pains me to know what Plock is doing &amp;quot;under the hood&amp;quot; &lt;a class="footnote-reference" href="#id20" id="id3"&gt;[7]&lt;/a&gt;. Nevertheless, I felt compelled to write it and make it work well because not having it is even more painful.&lt;/p&gt;
&lt;p&gt;Before I tell you what Plock is &lt;a class="footnote-reference" href="#id21" id="id4"&gt;[8]&lt;/a&gt;, let me briefly describe what Plone is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-plone-really"&gt;
&lt;h2&gt;What is Plone, really?&lt;/h2&gt;
&lt;p&gt;What is the complexity I mention above? Briefly, with as few loaded statements as possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Zope2&lt;/strong&gt; &amp;quot;application server&amp;quot;. This is something you can &lt;tt class="docutils literal"&gt;pip install&lt;/tt&gt; but the results will not be usable &lt;a class="footnote-reference" href="#id17" id="id5"&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Zope2 add-ons&lt;/strong&gt; AKA &amp;quot;products&amp;quot;, most notably the Zope2 Content Management Framework (CMF). This is something you install on top of Zope2 (conceptually but not literally, &lt;tt class="docutils literal"&gt;pip install Products.CMFCore&lt;/tt&gt;) that provides typical content management features e.g. personalization, workflow, cataloging, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Zope3&lt;/strong&gt; technologies e.g. the Zope Component Architecture (ZCA). These are things that are included-or-integrated with Zope2 and Plone. &lt;a class="footnote-reference" href="#id18" id="id6"&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Buildout&lt;/strong&gt; technologies e.g. setuptools, console scripts, recipes, extensions, etc. You can't easily build Plone without them, so we may as well declare them as dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Plone&lt;/strong&gt; technologies. Plone was originally known as a &amp;quot;skin for CMF&amp;quot; but has become much more than that.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Archetypes&lt;/strong&gt; Legacy content type framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dexterity&lt;/strong&gt; Modern content type framework based on modern Zope concepts e.g. &amp;quot;Reuse over reinvention&amp;quot;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Diazo&lt;/strong&gt; Modern theming engine based on XSLT that &amp;quot;maps Plone content to generic website themes.&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In total, if you &lt;tt class="docutils literal"&gt;pip install Plone&lt;/tt&gt; over 200 Python packages are installed &lt;a class="footnote-reference" href="#id19" id="id7"&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-plock-really"&gt;
&lt;h2&gt;What is Plock, really?&lt;/h2&gt;
&lt;p&gt;OK now it's time to explain Plock. Plock is something:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;you &lt;strong&gt;install from PyPI&lt;/strong&gt; via &lt;tt class="docutils literal"&gt;pip install plock&lt;/tt&gt;. &amp;quot;Pip installs packages. Plock installs Plone.&amp;quot;&lt;/li&gt;
&lt;li&gt;you use to &lt;strong&gt;install Plone&lt;/strong&gt; without having to know about tarballs or Buildout.&lt;/li&gt;
&lt;li&gt;you use to &lt;strong&gt;install Plone add-ons&lt;/strong&gt; without having to know about Buildout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In one sentence: Plock runs Buildout so you don't have to, at least initially.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-steps-with-plock"&gt;
&lt;h2&gt;First steps with Plock&lt;/h2&gt;
&lt;div class="section" id="step-1"&gt;
&lt;h3&gt;Step #1&lt;/h3&gt;
&lt;p&gt;The first step with Plock &lt;a class="footnote-reference" href="#id22" id="id8"&gt;[9]&lt;/a&gt; is that light bulb moment when you say to yourself: &amp;quot;I've heard that Plone is the ultimate open source enterprise CMS and I'd love to try it!&amp;quot; But you aren't willing to download a compressed archive and run the installer nor are you willing to &lt;tt class="docutils literal"&gt;pip install zc.buildout&lt;/tt&gt; and figure the rest out for yourself. Enter Plock.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-2"&gt;
&lt;h3&gt;Step #2&lt;/h3&gt;
&lt;p&gt;The second step with Plock is knowing that it exists you can install it with: &lt;tt class="docutils literal"&gt;pip install plock&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="step-3"&gt;
&lt;h3&gt;Step #3&lt;/h3&gt;
&lt;p&gt;The third step with Plock is using it to install Plone:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ plock plone
Creating virtualenv... (plone)
Installing buildout...
Downloading installer (https://launchpad.net/plone/4.3/4.3.4/+download/Plone-4.3.4-r1-UnifiedInstaller.tgz)
Unpacking installer...
Unpacking cache...
Installing eggs...
Installing cmmi &amp;amp; dist...
Configuring cache...
Running buildout...
Done, now run:
  plone/bin/plone fg
&lt;/pre&gt;
&lt;p&gt;Now Plock's work is done; visit the following URL: &lt;a class="reference external" href="http:://localhost:8080"&gt;http:://localhost:8080&lt;/a&gt; and you should see:&lt;/p&gt;
&lt;img alt="Plock Screen 1" class="align-center" src="/images/plock-screen-1.png" /&gt;
&lt;p&gt;Create a Plone site:&lt;/p&gt;
&lt;img alt="Plock Screen 2" class="align-center" src="/images/plock-screen-2.png" /&gt;
&lt;p&gt;Start using Plone:&lt;/p&gt;
&lt;img alt="Plock Screen 3" class="align-center" src="/images/plock-screen-3.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps-with-plock"&gt;
&lt;h2&gt;Next steps with Plock&lt;/h2&gt;
&lt;p&gt;Plock is more than just a way to install the latest stable version of Plone quickly and easily. It's also a way to find and install Plone add-ons quickly and easily, and a way to install almost any version of Plone including the upcoming Plone 5 release.&lt;/p&gt;
&lt;div class="section" id="installing-add-ons"&gt;
&lt;h3&gt;Installing Add-ons&lt;/h3&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;Step #1&lt;/h4&gt;
&lt;p&gt;List all Plone-related packages on PyPI:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ plock -l
1) 73.unlockItems                           - A small tool for unlocking web_dav locked item in a plone portal.
2) actionbar.panel                          - Provides a (old) facebook style action panel at the bottom of your  Plone site
3) adi.init                                 - Deletes Plone's default contents
4) adi.samplecontent                        - Deletes Plone's default content and adds some sample content
5) adi.slickstyle                           - A slick style for Plone portals, easily extendable for your own styles.
6) affinitic.simplecookiecuttr              - Basic integration of jquery.cookiecuttr.js for Plone 3
7) anthill.querytool                        - GUI for AdvancedQuery with some extensions - searching the easy way for Plone
8) anthill.skinner                          - Skinning for plone made easy
9) anz.dashboard                            - Plone netvibes like dashboard implementation
10) anz.ijabbar                              - Integrate iJab(an open source XMPP web chat client recommended by xmpp.org) to your plone site.
…
1,352) zopeskel.diazotheme                      - Paster templates for Plone Diazo theme package
1,353) zopeskel.niteoweb                        - Paster templates for standard NiteoWeb Plone projects
1,354) zopyx.ecardsng                           - An ECard implementation for Plone
1,355) zopyx.existdb                            - Plone-ExistDB integration
1,356) zopyx.ipsumplone                         - Lorem ipsum text and image demo content for Plone
1,357) zopyx.multieventcalendar                 - A multi-event calendar for Plone 3.X
1,358) zopyx.plone.cassandra                    - Show all assigned local roles within a subtree for any Plone 4 site
1,359) zopyx.plone.migration                    - Export/import scripts for migration Plone 2+3 to Plone 4
1,360) zopyx.smartprintng.plone                 - Produce &amp;amp; Publisher server integration with Plone
1,361) zopyx.together                           - Plone integration with together.js
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;Step #2&lt;/h4&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Plock currently only supports the initial creation of &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt;, so if you have already run &lt;tt class="docutils literal"&gt;plock&lt;/tt&gt; once and you want to install add-ons you'll have to use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; to overwrite &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Pick a few interesting things and install them:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ plock plone -i &amp;quot;Products.PloneFormGen collective.plonetruegallery eea.facetednavigation&amp;quot;
Creating virtualenv... (plone)
Installing buildout...
Downloading installer (https://launchpad.net/plone/4.3/4.3.4/+download/Plone-4.3.4-r1-UnifiedInstaller.tgz)
Unpacking installer...
Unpacking cache...
Installing eggs...
Installing cmmi &amp;amp; dist...
Configuring cache...
Installing addons...
- https://pypi.python.org/pypi/Products.PloneFormGen
- https://pypi.python.org/pypi/collective.plonetruegallery
- https://pypi.python.org/pypi/eea.facetednavigation
Running buildout...
Done, now run:
  plone/bin/plone fg
&lt;/pre&gt;
&lt;p&gt;Now you should see your add-ons available in Plone:&lt;/p&gt;
&lt;img alt="Plock Screen 6" src="/images/plock-screen-6.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="upgrading-plone"&gt;
&lt;h3&gt;Upgrading Plone&lt;/h3&gt;
&lt;div class="section" id="id11"&gt;
&lt;h4&gt;Step #1&lt;/h4&gt;
&lt;p&gt;Realize Plock has created a &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; file you can edit with a text editor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h4&gt;Step #2&lt;/h4&gt;
&lt;p&gt;Also realize Plock hosts &lt;a class="reference external" href="https://github.com/plock/pins"&gt;Buildout configuration files called Pins&lt;/a&gt; you can &lt;tt class="docutils literal"&gt;extend&lt;/tt&gt; from your local &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; file &lt;a class="footnote-reference" href="#id23" id="id13"&gt;[10]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h4&gt;Step #3&lt;/h4&gt;
&lt;p&gt;Edit your &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; file. Change the first &lt;tt class="docutils literal"&gt;extends&lt;/tt&gt; URL from:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
#    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;
&lt;p&gt;To:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-5-0
#    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;
&lt;p&gt;Run Buildout and start Plone:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ bin/buildout
$ bin/plone fg
&lt;/pre&gt;
&lt;p&gt;Enjoy the Plone 5 running man:&lt;/p&gt;
&lt;img alt="Plock Screen 5" class="align-center" src="/images/plock-screen-5.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tl-dr"&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Cut and paste this into a terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install plock; plock plone; plone/bin/plone fg
&lt;/pre&gt;
&lt;p&gt;Now open &lt;a class="reference external" href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; and happy Ploning.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Plock 0.3.0 is out! Install with&lt;/em&gt; &lt;tt class="docutils literal"&gt;pip install plock&lt;/tt&gt; &lt;em&gt;and report issues here:&lt;/em&gt; &lt;a class="reference external" href="https://github.com/plock/plock/issues"&gt;https://github.com/plock/plock/issues&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="footnotes"&gt;
&lt;h2&gt;Footnotes&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id15" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Whether or not dealing with that complexity is &amp;quot;worth it&amp;quot; I will not address here. Suffice it to say people still use and care about Plone and with Plone 5 coming &amp;quot;real soon now&amp;quot; there is some excitement building.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id16" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;He probably made it many times, and rightfully so.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id17" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;You can create an &amp;quot;instance&amp;quot; after &lt;tt class="docutils literal"&gt;pip install zope2&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;bin/mkzopeinstance&lt;/tt&gt; but &lt;tt class="docutils literal"&gt;$INSTANCE/bin/runzope&lt;/tt&gt; fails with &lt;tt class="docutils literal"&gt;ImportError: cannot import name _error_start&lt;/tt&gt; probably due to mismanaged package versions. Maybe we can fix this with version specs included in a dummy package's &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt;?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id18" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The integration is &lt;em&gt;not&lt;/em&gt; seemless, an undisputed fact as far as I know.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id19" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id20" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[7]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Creating and executing a &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; file for the end user. Buildout configuration files are written in INI-style text. Ideally the end user sees this file and says &amp;quot;Ah, now I understand how this works.&amp;quot;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id21" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[8]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I've also &lt;a class="reference external" href="http://blog.aclark.net/2013/07/19/introducing-plock/"&gt;covered&lt;/a&gt; &lt;a class="reference external" href="http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/"&gt;Plock&lt;/a&gt; &lt;a class="reference external" href="http://blog.aclark.net/2013/12/29/introducing-plock-again/"&gt;before&lt;/a&gt; &lt;a class="reference external" href="http://blog.aclark.net/2014/03/20/introducing-plock-pins/"&gt;here&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id22" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id8"&gt;[9]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;As someone familiar with Python and a UNIX shell already, because that is the market I like to serve.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id23" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id13"&gt;[10]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes, there is a security and/or reliability issue with doing this; you are clearly trading security and reliability for convenience.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;script data-gratipay-username="aclark4life" src="//grtp.co/v1.js"&gt;&lt;/script&gt;&lt;/div&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>Pillow 2015 Report</title><link href="http://blog.aclark.net/2015/04/05/pillow-2015-report/" rel="alternate"></link><updated>2015-04-05T18:50:50-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-04-05:2015/04/05/pillow-2015-report/</id><summary type="html">&lt;img alt="Most interesting man" src="/images/pillow-2015-report.png" /&gt;
&lt;p&gt;&lt;em&gt;Pillow is the friendly PIL fork by Alex Clark and Contributors. PIL is the Python Imaging Library by Fredrik Lundh and Contributors.&lt;/em&gt;&lt;/p&gt;
&lt;div class="section" id="the-state-of-the-pillow"&gt;
&lt;h2&gt;The state of the Pillow&lt;/h2&gt;
&lt;p&gt;Pillow Fighter #2 Eric Soroos had some time constraints recently so I managed the Pillow 2.8 release. While preparing the release I also reviewed and updated the entire project, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Issues&lt;/li&gt;
&lt;li&gt;Pull Requests&lt;/li&gt;
&lt;li&gt;Documentation&lt;/li&gt;
&lt;li&gt;Website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July of 2015 will mark Pillow's 5th anniversary and as of 2015, PIL is 20 years old. In early 2015, the state of the Pillow is good. Here are some statistics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Over &lt;a class="reference external" href="https://pypi.python.org/pypi/vanity"&gt;5.5 million PyPI downloads&lt;/a&gt;.&lt;ul&gt;
&lt;li&gt;About &lt;a class="reference external" href="https://pypi.python.org/pypi/Pillow/2.8.1#downloads"&gt;36 distributions&lt;/a&gt; uploaded with each release, including Windows Eggs/Exes/Wheels, OS X Wheels and source distributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4 core contributors AKA Pillow Fighters, including the recently added Alexander Karpinsky (AKA 'homm').&lt;/li&gt;
&lt;li&gt;Over &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/graphs/contributors"&gt;130 total contributors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;66 open issues (431 closed).&lt;/li&gt;
&lt;li&gt;12 open pull requests (672 closed).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="issues"&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;p&gt;All issues were pruned, including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Applying labels and milestones&lt;/li&gt;
&lt;li&gt;Changing state when appropriate&lt;/li&gt;
&lt;li&gt;Asking for status updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this time, most if not all issues have at least one label e.g. &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/labels/Bug"&gt;&amp;quot;bug&amp;quot;&lt;/a&gt; and many have milestones configured e.g. &amp;quot;2.9.0&amp;quot;. The most meaningful milestones designate either &amp;quot;this release&amp;quot; or &amp;quot;next release&amp;quot; or &amp;quot;future&amp;quot;. The most meaningful labels designate &amp;quot;needs code review or tests&amp;quot; or &amp;quot;bug or enhancement&amp;quot; or &amp;quot;question&amp;quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pull-requests"&gt;
&lt;h2&gt;Pull Requests&lt;/h2&gt;
&lt;p&gt;All mergable pull requests were merged just prior to the 2.8.0 release. Of the remaining open pull requests, most &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/labels/Needs%20Code%20Review"&gt;need code review&lt;/a&gt; and the rest are experimental or in progress.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentation"&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Pillow's documentation is now sizeable, a large part of which was forked from the PIL handbook and some of which is created automatically by Sphinx. The remainder is new and was the focus of recent updates &lt;a class="footnote-reference" href="#id4" id="id1"&gt;[1]&lt;/a&gt;, &lt;a class="footnote-reference" href="#id5" id="id2"&gt;[2]&lt;/a&gt;, &lt;a class="footnote-reference" href="#id6" id="id3"&gt;[3]&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/blob/master/README.rst"&gt;https://github.com/python-pillow/Pillow/blob/master/README.rst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/blob/master/CONTRIBUTING.md"&gt;https://github.com/python-pillow/Pillow/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/blob/master/RELEASING.md"&gt;https://github.com/python-pillow/Pillow/blob/master/RELEASING.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pillow.readthedocs.org/installation.html"&gt;http://pillow.readthedocs.org/installation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="website"&gt;
&lt;h2&gt;Website&lt;/h2&gt;
&lt;p&gt;Finally, the website received some much needed attention. We're currently using a theme provided by GitHub Pages, and minimal effort is invested to maintain it, but we may be &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/issues/1180"&gt;interested in building a new one&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/pull/1175"&gt;https://github.com/python-pillow/Pillow/pull/1175&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/pull/1179"&gt;https://github.com/python-pillow/Pillow/pull/1179&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/python-pillow/Pillow/pull/1181"&gt;https://github.com/python-pillow/Pillow/pull/1181&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;script data-gratipay-username="aclark4life" src="//grtp.co/v1.js"&gt;&lt;/script&gt;&lt;/div&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>Don't sudo pip install</title><link href="http://blog.aclark.net/2015/02/28/dont-sudo-pip-install/" rel="alternate"></link><updated>2015-02-28T18:09:39-05:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-02-28:2015/02/28/dont-sudo-pip-install/</id><summary type="html">&lt;p&gt;How many times have you seen this?&lt;/p&gt;
&lt;img alt="Reddit thread" src="/images/dont-sudo-pip-install.png" /&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>New Django Website</title><link href="http://blog.aclark.net/2015/01/11/new-django-website/" rel="alternate"></link><updated>2015-01-11T18:44:48-05:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-01-11:2015/01/11/new-django-website/</id><summary type="html">&lt;p&gt;&lt;em&gt;After a series of Django gigs in 2014, I had the urge to redevelop our company website in Django; I am very happy with the results. This overview is roughly in order of development from start to finish. And since I am a &amp;quot;packaging guy&amp;quot;, I will take this opportunity to comment on miscellaneous packaging issues too&lt;/em&gt;.&lt;/p&gt;
&lt;img alt="Website front page" src="/images/aclarknet-django.png" /&gt;
&lt;div class="section" id="same-theme-different-backend"&gt;
&lt;h2&gt;Same theme, different backend&lt;/h2&gt;
&lt;p&gt;The Pyramid version of aclark.net was almost two years old and needed an overhaul. Django appeared attractive because:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I know Django, but I don't know enough Django. Like with Pyramid and Plone before, I learned a lot of Django while developing this site over the last few weeks.&lt;/li&gt;
&lt;li&gt;There was no &amp;quot;content&amp;quot; with the previous (Pyramid) site. The idea of putting my &amp;quot;content&amp;quot; in Django models was appealing to me.&lt;/li&gt;
&lt;li&gt;The new &lt;a class="reference external" href="https://djangoproject.com"&gt;Django project&lt;/a&gt; website is awesome! An awesome website makes me want to build another awesome website with an awesome web framework. Awesome.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="i-hate-code-generators"&gt;
&lt;h2&gt;I hate code generators&lt;/h2&gt;
&lt;p&gt;I typically hate using code generators, full stop. But somehow Django's &lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;startapp&lt;/tt&gt; don't make me want to vomit. So I used them in an organic &lt;a class="footnote-reference" href="#id7" id="id1"&gt;[1]&lt;/a&gt; way, to make some &lt;a class="reference external" href="https://github.com/ACLARKNET/aclarknet-django/tree/master/aclarknet/aclarknet/aclarknet"&gt;obnoxiously long package names&lt;/a&gt;, and I &lt;em&gt;miraculously&lt;/em&gt; don't hate the results! This can only mean:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I am more tolerant of boilerplate code when learning a new framework, and/or:&lt;/li&gt;
&lt;li&gt;The process of creating the boilerplate code and the resulting boilerplate are so elegant/minimalistic that my insatiable desire for elegance/minimalism is at least partially satisified.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="no-postgres-no-problem"&gt;
&lt;h2&gt;No Postgres? No problem&lt;/h2&gt;
&lt;p&gt;The idea of having to develop locally with Postgresql (or some other &amp;quot;real&amp;quot; database) feels &amp;quot;heavy&amp;quot; to me. With sqlite, I don't have to worry about database setup until I'm ready to worry about database setup &lt;a class="footnote-reference" href="#id8" id="id2"&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I even pushed to Heroku with the sqlite database checked in, until I was ready to deploy Postgres. And I still use sqlite locally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bootstrap-all-the-things"&gt;
&lt;h2&gt;Bootstrap all the things&lt;/h2&gt;
&lt;p&gt;Sure Bootstrap is ubiquitious now, but it remains attractive nonetheless. One of the first tasks I performed was add &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin-bootstrapped&lt;/span&gt;&lt;/tt&gt; to my &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt; &lt;a class="footnote-reference" href="#id9" id="id3"&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And because it's 2015, I Bower-installed Bootstrap and Fontawesome for my theme development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="make-like-a-tree-and-file"&gt;
&lt;h2&gt;Make like a tree and file&lt;/h2&gt;
&lt;p&gt;Lately I've gotten into the habit of using good-ol' Make to automate various tasks &lt;a class="footnote-reference" href="#id10" id="id4"&gt;[4]&lt;/a&gt;. This project was no exception:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dump:
    curl -o latest.dump `heroku pgbackups:url`
push:
    git push
    git push heroku master
sync:
    heroku run python aclarknet/manage.py syncdb
publish:
    git commit -a -m &amp;quot;Update&amp;quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="add-ons-apps-eggs-distributions-packages-products-wheels"&gt;
&lt;h2&gt;Add-ons, Apps, Eggs, Distributions, Packages, Products, Wheels&lt;/h2&gt;
&lt;p&gt;I am &lt;em&gt;literally&lt;/em&gt; annoyed by the &lt;em&gt;figurative&lt;/em&gt; abomination that is Python packaging terminology. The proliferation of terms is understandable though because of the many layers of &lt;em&gt;technology&lt;/em&gt;, each with its own &lt;em&gt;terminology&lt;/em&gt;, that may or may not overlap:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The Python language&lt;/li&gt;
&lt;li&gt;Various packaging frameworks&lt;/li&gt;
&lt;li&gt;Software written in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And all of that was just so I could tell you I pip-installed the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Django
Pillow
django-admin-bootstrapped
django-cumulus
dj-database-url
dj-static
gunicorn
psycopg2
-e aclarknet
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="buildout-conda-easy-install-pip"&gt;
&lt;h2&gt;Buildout, Conda, easy_install, pip&lt;/h2&gt;
&lt;p&gt;On a related subject, why do I have a &lt;a class="reference external" href="https://github.com/ACLARKNET/aclarknet-django/blob/master/aclarknet/setup.py"&gt;setup.py&lt;/a&gt;? I get the feeling that Django projects in the wild sometimes have one and sometimes don't. And the Django documentation &lt;a class="reference external" href="https://docs.djangoproject.com/search/?q=setup+py&amp;amp;release=11"&gt;has only a few mentions of setup.py&lt;/a&gt;. So why do I have one?&lt;/p&gt;
&lt;p&gt;In short, because I want my code in &lt;tt class="docutils literal"&gt;sys.path&lt;/tt&gt;. I have another feeling that when Django projects/apps/etc don't have setup.py files, they are somehow manipulating sys.path manually to include themselves. There is &lt;a class="reference external" href="https://docs.djangoproject.com/search/?q=sys+path&amp;amp;release=11"&gt;slightly more mentioning of sys.path&lt;/a&gt; in Django's documentation, at least.&lt;/p&gt;
&lt;p&gt;Anyway, I use setup.py because I'm familiar with setuptools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="contact-form"&gt;
&lt;h2&gt;Contact Form&lt;/h2&gt;
&lt;p&gt;Enough packaging rants, back to the rest of the Django story.&lt;/p&gt;
&lt;p&gt;Every business website needs a contact form, right? And contact forms are tedious and boring to create, right? Yes and yes. That's why I thought using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-contact-form&lt;/span&gt;&lt;/tt&gt; would be a good idea. Unfortunately I ran into an issue I couldn't easily work around, so I gave up and &lt;a class="reference external" href="https://github.com/ACLARKNET/aclarknet-django/blob/master/aclarknet/aclarknet/aclarknet/views.py#L32"&gt;made my own&lt;/a&gt; &lt;a class="footnote-reference" href="#id11" id="id5"&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="orm-i-really-on-my-own"&gt;
&lt;h2&gt;ORM I really on my own?&lt;/h2&gt;
&lt;a class="reference external image-reference" href="https://twitter.com/aclark4life/status/552626214008274944"&gt;&lt;img alt="Tweet" src="/images/aclark-tweet.png" /&gt;&lt;/a&gt;
&lt;p&gt;That's right. After adding an &lt;tt class="docutils literal"&gt;ImageField&lt;/tt&gt; I expected the image to be stored in the database and not the file system, and I'm not ashamed. Since that was not the case, I ended up using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-cumulus&lt;/span&gt;&lt;/tt&gt; &lt;a class="footnote-reference" href="#id12" id="id6"&gt;[6]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="overall"&gt;
&lt;h2&gt;Overall&lt;/h2&gt;
&lt;p&gt;Overall, this was a great experience. As such, I'm now considering another &lt;a class="reference external" href="http://pythonpackages.com"&gt;pythonpackages.com&lt;/a&gt; reboot with Django; to further exercise my Django chops and fullfill the packaging-automation-vision I've had since late 2011.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please let me know your reaction to my experiences in the comments.&lt;/em&gt;&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt; startproject aclarknet; cd aclarknet/aclarknet; &lt;span class="pre"&gt;django-admin&lt;/span&gt; startapp aclarknet&lt;/tt&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Granted, the perceived heaviness is much worse than the &lt;em&gt;actual&lt;/em&gt; burden of &amp;quot;real&amp;quot; database setup which is admittedly fairly trivial: &lt;tt class="docutils literal"&gt;brew install postgres&lt;/tt&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The Django admin without Bootstrap reminds me of the ZMI without Bootstrap, which &lt;a class="reference external" href="https://pypi.python.org/pypi/zope2_bootstrap"&gt;I also don't like&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Embarrassingly, I create the tabs with &lt;tt class="docutils literal"&gt;s/&amp;nbsp;&amp;nbsp;&amp;nbsp; /\t/&lt;/tt&gt; because my tabstop is set to 4 spaces. Maybe I should be change my tabstop setting each time?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id11" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Something to do with Sendgrid integration, certainly not django-contact-form's fault!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id12" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Which is another story. First I tried &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-storages&lt;/span&gt;&lt;/tt&gt; only to discover Rackspace Cloud Files support moved to cumulus (or started in cumulus and moved back?) Then &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-cumulus&lt;/span&gt;&lt;/tt&gt; &lt;em&gt;almost&lt;/em&gt; worked but not quite. Rackspace Cloud Files returned a URL but upload failed. So I manually uploaded all the files to Rackspace Cloud Files as a workaround.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>Packt is having a sale</title><link href="http://blog.aclark.net/2015/01/05/packt-is-having-a-sale/" rel="alternate"></link><updated>2015-01-05T14:56:26-05:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2015-01-05:2015/01/05/packt-is-having-a-sale/</id><summary type="html">&lt;img alt="Packt is having a sale!" src="/images/packt-5.png" /&gt;
&lt;p&gt;Happy new year!&lt;/p&gt;
&lt;p&gt;For those who haven't heard, PACKT is having a $5 &amp;quot;bonanza&amp;quot;. &lt;a class="reference external" href="https://www.packtpub.com/packt5dollar/?utm_source=rochelld&amp;amp;utm_medium=referral&amp;amp;utm_campaign=5D2014"&gt;Pick up some $5 Python books&lt;/a&gt; while you can! E.g.:&lt;/p&gt;
&lt;img alt="Popular Python titles" src="/images/packt-pop.png" /&gt;
&lt;p&gt;Sale ends tomorrow, &lt;a class="reference external" href="https://www.packtpub.com/packt5dollar/?utm_source=rochelld&amp;amp;utm_medium=referral&amp;amp;utm_campaign=5D2014"&gt;check it out&lt;/a&gt;!&lt;/p&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>Pillow Runs Itself!</title><link href="http://blog.aclark.net/2014/10/02/pillow-runs-itself/" rel="alternate"></link><updated>2014-10-02T14:30:00-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2014-10-02:2014/10/02/pillow-runs-itself/</id><summary type="html">&lt;p&gt;&lt;strong&gt;As of Pillow 2.6.0, the Pillow project almost completely runs itself!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Of course when I say &amp;quot;runs itself&amp;quot; I mean &amp;quot;runs without me&amp;quot;, which is what &lt;strong&gt;every open source project lead hopes for&lt;/strong&gt;. For the first time ever, I was able to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Turn off GitHub Watching until two weeks before the release.&lt;/li&gt;
&lt;li&gt;Not run &lt;cite&gt;setup.py upload&lt;/cite&gt; or &lt;cite&gt;twine upload&lt;/cite&gt; myself.&lt;/li&gt;
&lt;li&gt;Watch in awe as Pillow Men #s 2 &amp;amp; 3 did all the work. [1]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kudos to these gentlemen for making my life easier and for continuing to provide the Python community with a featureful, modern &amp;amp; secure Python Imaging Library. Additionally &lt;strong&gt;thanks to all the contributors from all over the world&lt;/strong&gt; who continue to develop and improve Pillow. I used to keep a list, but now there are &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/graphs/contributors"&gt;too many to keep track of&lt;/a&gt;. Oh and lastly, &lt;a class="reference external" href="https://twitter.com/wiredfool/status/517382632267841536"&gt;2.6.0 is out&lt;/a&gt;! Enjoy the release &amp;amp; please &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/issues"&gt;report issues here&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;[1]&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://twitter.com/wiredfool"&gt;Eric Soroos&lt;/a&gt; &amp;amp; &lt;a class="reference external" href="https://twitter.com/hugovk"&gt;Hugo&lt;/a&gt; respectively. Additional thanks to Christoph Gohlke for &lt;a class="reference external" href="https://pypi.python.org/pypi/Pillow/2.6.0#downloads"&gt;Windows Eggs, Exes, Wheels&lt;/a&gt;, Matthew Brett for &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/issues/766"&gt;OS X Wheels&lt;/a&gt;, and Steve Johnson for &lt;a class="reference external" href="https://github.com/python-pillow/Pillow/issues/769"&gt;Sphinx Documentation&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;P.S. New theme! Thanks &lt;a class="reference external" href="http://purepelican.com/"&gt;Pure Pelican Theme&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Pillow 2-5-0 is out!</title><link href="http://blog.aclark.net/2014/07/05/pillow-2-5-0-is-out/" rel="alternate"></link><updated>2014-07-05T11:15:00-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2014-07-05:2014/07/05/pillow-2-5-0-is-out/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Pillow is the &amp;quot;friendly&amp;quot; PIL fork by Alex Clark and Contributors. PIL is the Python Imaging Library by Fredrik Lundh and Contributors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since Pillow 2.0 the Pillow Team has adopted a quarterly release cycle; as such, Pillow 2.5.0 is out! Here's what's new in this release:&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2.5.0 (2014-07-01)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Imagedraw rewrite
[terseus, wiredfool]&lt;/li&gt;
&lt;li&gt;Add support for multithreaded test execution
[wiredfool]&lt;/li&gt;
&lt;li&gt;Prevent shell injection #748
[mbrown1413, wiredfool]&lt;/li&gt;
&lt;li&gt;Support for Resolution in BMP files #734
[gcq]&lt;/li&gt;
&lt;li&gt;Fix error in setup.py for Python 3
[matthew-brett]&lt;/li&gt;
&lt;li&gt;Pyroma fix and add Python 3.4 to setup metadata #742
[wirefool]&lt;/li&gt;
&lt;li&gt;Top level flake8 fixes #741
[aclark]&lt;/li&gt;
&lt;li&gt;Remove obsolete Animated Raster Graphics (ARG) support
[hugovk]&lt;/li&gt;
&lt;li&gt;Fix test_imagedraw failures #727
[cgohlke]&lt;/li&gt;
&lt;li&gt;Fix AttributeError: class Image has no attribute 'DEBUG' #726
[cgohlke]&lt;/li&gt;
&lt;li&gt;Fix msvc warning: 'inline' : macro redefinition #725
[cgohlke]&lt;/li&gt;
&lt;li&gt;Cleanup #654
[dvska, hugovk, wiredfool]&lt;/li&gt;
&lt;li&gt;16-bit monochrome support for JPEG2000
[videan42]&lt;/li&gt;
&lt;li&gt;Fixed ImagePalette.save
[brightpisces]&lt;/li&gt;
&lt;li&gt;Support JPEG qtables
[csinchok]&lt;/li&gt;
&lt;li&gt;Add binary morphology addon
[dov, wiredfool]&lt;/li&gt;
&lt;li&gt;Decompression bomb protection
[hugovk]&lt;/li&gt;
&lt;li&gt;Put images in a single directory
[hugovk]&lt;/li&gt;
&lt;li&gt;Support OpenJpeg 2.1
[al45tair]&lt;/li&gt;
&lt;li&gt;Remove unistd.h #include for all platforms
[wiredfool]&lt;/li&gt;
&lt;li&gt;Use unittest for tests
[hugovk]&lt;/li&gt;
&lt;li&gt;ImageCms fixes
[hugovk]&lt;/li&gt;
&lt;li&gt;Added more ImageDraw tests
[hugovk]&lt;/li&gt;
&lt;li&gt;Added tests for Spider files
[hugovk]&lt;/li&gt;
&lt;li&gt;Use libtiff to write any compressed tiff files
[wiredfool]&lt;/li&gt;
&lt;li&gt;Support for pickling Image objects
[hugovk]&lt;/li&gt;
&lt;li&gt;Fixed resolution handling for EPS thumbnails
[eliempje]&lt;/li&gt;
&lt;li&gt;Fixed rendering of some binary EPS files (Issue #302)
[eliempje]&lt;/li&gt;
&lt;li&gt;Rename variables not to use built-in function names
[hugovk]&lt;/li&gt;
&lt;li&gt;Ignore junk JPEG markers
[hugovk]&lt;/li&gt;
&lt;li&gt;Change default interpolation for Image.thumbnail to Image.ANTIALIAS
[hugovk]&lt;/li&gt;
&lt;li&gt;Add tests and fixes for saving PDFs
[hugovk]&lt;/li&gt;
&lt;li&gt;Remove transparency resource after P-&amp;gt;RGBA conversion
[hugovk]&lt;/li&gt;
&lt;li&gt;Clean up preprocessor cruft for Windows
[CounterPillow]&lt;/li&gt;
&lt;li&gt;Adjust Homebrew freetype detection logic
[jacknagel]&lt;/li&gt;
&lt;li&gt;Added Image.close, context manager support.
[wiredfool]&lt;/li&gt;
&lt;li&gt;Added support for 16 bit PGM files.
[wiredfool]&lt;/li&gt;
&lt;li&gt;Updated OleFileIO to version 0.30 from upstream
[hugovk]&lt;/li&gt;
&lt;li&gt;Added support for additional TIFF floating point format
[Hijackal]&lt;/li&gt;
&lt;li&gt;Have the tempfile use a suffix with a dot
[wiredfool]&lt;/li&gt;
&lt;li&gt;Fix variable name used for transparency manipulations
[nijel]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="acknowledgements"&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;With every release, there are notable contributions I must acknowledge:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Thanks to Stephen Johnson for contributing &lt;a class="reference external" href="http://pillow.readthedocs.org"&gt;http://pillow.readthedocs.org&lt;/a&gt;, we continue to rely on &amp;amp; extend this resource.&lt;/li&gt;
&lt;li&gt;Thanks to Christopher Gohlke for producing Windows Egg, Exe, and Wheel distributions.&lt;/li&gt;
&lt;li&gt;Thanks to Matthew Brett for producing OS X Wheels (for the first time ever!)&lt;/li&gt;
&lt;li&gt;Thanks to Eric Soroos for his contributions and serving as &amp;quot;Pillow Man #2&amp;quot; (2nd in command).&lt;/li&gt;
&lt;li&gt;Welcome to Hugo VK who has joined the Pillow Team &amp;amp; contributed significantly to this release.&lt;/li&gt;
&lt;li&gt;Thanks to all the remaining unnamed contributors! We appreciate every commit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy Pillow 2.5.0 &amp;amp; please report issues here: &lt;a class="reference external" href="https://github.com/python-imaging/Pillow/issues"&gt;https://github.com/python-imaging/Pillow/issues&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Django"></category><category term="Mozilla"></category><category term="Plone"></category><category term="Python"></category></entry><entry><title>Plone 5 Alpha 2 is here!</title><link href="http://blog.aclark.net/2014/06/18/plone-5-alpha-2-is-here/" rel="alternate"></link><updated>2014-06-18T08:00:00-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2014-06-18:2014/06/18/plone-5-alpha-2-is-here/</id><summary type="html">&lt;p&gt;&lt;em&gt;This post is long overdue since Plone 5 alpha 2 was released on 2014-04-20! It is also too short. I may do a followup blog entry to review more features, depending on how well this one is received. I also want to talk more about Plock.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When Plone 4 alpha 1 was released, I was so excited I immediately &lt;a class="reference external" href="http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/"&gt;ran it in production&lt;/a&gt;. Now-a-days I use &lt;a class="reference external" href="http://blog.aclark.net/2013/04/22/new-pyramid-site/"&gt;Pyramid for aclark.net&lt;/a&gt; but I still get excited about new Plone releases.&lt;/p&gt;
&lt;p&gt;As such, I finally got around to testing the latest Plone 5 alpha with &lt;a class="reference external" href="http://blog.aclark.net/2014/03/20/introducing-plock-pins/"&gt;my deployment stack&lt;/a&gt; and the results were very impressive, so I thought I'd share.&lt;/p&gt;
&lt;div class="section" id="hosted-configuration"&gt;
&lt;h2&gt;Hosted configuration&lt;/h2&gt;
&lt;p&gt;Because of the &amp;quot;muscle memory&amp;quot; I've built up over the years doing this, I always install Plone in development and production via my &lt;a class="reference external" href="https://github.com/plock/pins"&gt;hosted configuration files&lt;/a&gt;. If you are not a developer you may instead prefer the &lt;a class="reference external" href="http://plone.org/products/plone/releases/5.0"&gt;Unified Installer, VirtualBox/Vagrant installer or OS X Lion/Mountain Lion/Mavericks Binary Installer&lt;/a&gt; otherwise follow along &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install tmp virtualenv
$ cd `tmp`
$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;
&lt;p&gt;Edit &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; to contain:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends = https://raw.github.com/plock/pins/master/plone-5-0
&lt;/pre&gt;
&lt;p&gt;Run Buildout and start Plone:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ bin/buildout
$ bin/plone fg
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="create-plone-site"&gt;
&lt;h2&gt;Create Plone Site&lt;/h2&gt;
&lt;p&gt;The first thing you will notice is the improved &amp;quot;Create a Plone Site&amp;quot; page which now includes a timezone configuration option:&lt;/p&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-0.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="barceloneta-theme"&gt;
&lt;h2&gt;Barceloneta Theme&lt;/h2&gt;
&lt;p&gt;I selected the &lt;tt class="docutils literal"&gt;US/Eastern&lt;/tt&gt; timezone and clicked &lt;tt class="docutils literal"&gt;Create Plone Site&lt;/tt&gt;, shortly after which I was greeted with a beautiful new Plone 5 site in all its open source glory. Immediately you will notice a new theme and toolbar:&lt;/p&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-1.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="plone-toolbar"&gt;
&lt;h2&gt;Plone Toolbar&lt;/h2&gt;
&lt;p&gt;Here is a quick tour of the new toolbar.&lt;/p&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-1.png" /&gt;
&lt;div class="section" id="folder-contents"&gt;
&lt;h3&gt;Folder contents&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-2.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="edit-button"&gt;
&lt;h3&gt;Edit button&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-3.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="sharing-settings"&gt;
&lt;h3&gt;Sharing settings&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-4.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="workflow-settings"&gt;
&lt;h3&gt;Workflow settings&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-5.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="add-content"&gt;
&lt;h3&gt;Add content&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-6.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="layout-settings"&gt;
&lt;h3&gt;Layout settings&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-7.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="user-menu"&gt;
&lt;h3&gt;User menu&lt;/h3&gt;
&lt;img alt="Plone 5" src="/images/plone-5-screen-8.png" /&gt;
&lt;p&gt;Love it! Of all these, only the eye icon didn't function as expected. Not sure what it's supposed to do but I assume it's not done yet. Additionally, I wish the small Plone logo in the toolbar navigated &amp;quot;home&amp;quot; like the portal logo. Or maybe it will close the toolbar? Oh, the possibilities!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="thanks"&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Many thanks to everyone who has worked hard to make Plone 5 a reality.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You should probably&lt;/em&gt; &lt;a class="reference external" href="http://aclark.net"&gt;hire me&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a class="reference external" href="http://twitter.com/aclark4life"&gt;follow me on Twitter&lt;/a&gt; &lt;em&gt;or both&lt;/em&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;And please try &lt;a class="reference external" href="http://plock.github.io"&gt;Plock&lt;/a&gt; which automates all of these steps e.g. &lt;tt class="docutils literal"&gt;pip install plock; plock .;bin/plone fg&lt;/tt&gt; Once Plone (4) is installed, update the extends parameter in &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://raw.github.com/plock/pins/master/plone-5-0&lt;/span&gt;&lt;/tt&gt; and rerun Buildout.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry><entry><title>I love collective-recipe-plonesite!</title><link href="http://blog.aclark.net/2014/06/02/i-love-collective-recipe-plonesite/" rel="alternate"></link><updated>2014-06-02T18:15:00-04:00</updated><author><name>Alex Clark</name></author><id>tag:blog.aclark.net,2014-06-02:2014/06/02/i-love-collective-recipe-plonesite/</id><summary type="html">&lt;p&gt;Whenever I answer tech support questions, I usually begin with a clean slate, e.g.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install tmp virtualenv
$ cd `tmp`
$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;
&lt;p&gt;Then I edit &lt;tt class="docutils literal"&gt;buildout.cfg&lt;/tt&gt; to look like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3
&lt;/pre&gt;
&lt;p&gt;Then I run Buildout:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ bin/buildout
&lt;/pre&gt;
&lt;p&gt;And because my &lt;tt class="docutils literal"&gt;.buildout/default.cfg&lt;/tt&gt; file looks like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
eggs-directory = /Users/aclark/Developer/eggs-directory
download-cache = /Users/aclark/Developer/download-cache
extends-cache = /Users/aclark/Developer/extends-cache
&lt;/pre&gt;
&lt;p&gt;, the entire process only takes a few seconds (except for when I &lt;a class="reference external" href="http://blog.aclark.net/2014/03/19/virtualenv-support-update/"&gt;run into trouble with setuptools&lt;/a&gt;. I should probably start doing &lt;tt class="docutils literal"&gt;virtualenv &lt;span class="pre"&gt;--no-setuptools&lt;/span&gt;&lt;/tt&gt;. Perhaps this can be made default?)&lt;/p&gt;
&lt;p&gt;If I'm in the mood to search the source code, I add the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;
&lt;p&gt;Then I run Buildout, after which I can easily search in &lt;tt class="docutils literal"&gt;parts/omelette&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="plone-site-debug"&gt;
&lt;h2&gt;Plone site debug&lt;/h2&gt;
&lt;p&gt;Anyway, sometimes instead of running Plone through-the-web I want to run a debug prompt instead. All that is required is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ bin/plone debug
&lt;/pre&gt;
&lt;p&gt;However at this point there is no Plone site object in the database. One could easily create a Plone site through-the-web, but why bother when &lt;a class="reference external" href="https://pypi.python.org/pypi/collective.recipe.plonesite"&gt;collective.recipe.plonesite&lt;/a&gt; exists:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
    https://raw.github.com/plock/pins/master/dev
parts += plonesite

[plonesite]
recipe = collective.recipe.plonesite
instance = plone
&lt;/pre&gt;
&lt;p&gt;After running Buildout, now I can examine the Plone site:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ bin/plone debug
Starting debugger (the name &amp;quot;app&amp;quot; is bound to the top-level Zope object)

&amp;gt;&amp;gt;&amp;gt; app.Plone.
Display all 864 possibilities? (y or n)
app.Plone.COPY(                                                 app.Plone.hasObject__roles__
app.Plone.COPY__roles__                                         app.Plone.hasProperty(
app.Plone.Contributors(                                         app.Plone.hasProperty__roles__
app.Plone.Contributors__roles__                                 app.Plone.has_local_roles(
app.Plone.CreationDate(                                         app.Plone.has_order_support
app.Plone.CreationDate__roles__                                 app.Plone.http__etag(
app.Plone.Creator(                                              app.Plone.http__parseMatchList(
app.Plone.Creator__roles__                                      app.Plone.http__processMatchHeaders(
app.Plone.DELETE(                                               app.Plone.http__refreshEtag(
app.Plone.DELETE__roles__                                       app.Plone.icon
app.Plone.Date(                                                 app.Plone.icon__roles__
app.Plone.Date__roles__                                         app.Plone.id
app.Plone.Description(                                          app.Plone.indexObject(
app.Plone.Description__roles__                                  app.Plone.invokeFactory(
app.Plone.EffectiveDate(                                        app.Plone.invokeFactory__roles__
app.Plone.EffectiveDate__roles__                                app.Plone.isAnObjectManager
app.Plone.ExpirationDate(                                       app.Plone.isEffective(
app.Plone.ExpirationDate__roles__                               app.Plone.isEffective__roles__
app.Plone.Format(                                               app.Plone.isPrincipiaFolderish
app.Plone.Format__roles__                                       app.Plone.isTopLevelPrincipiaApplicationObject
app.Plone.HEAD(                                                 app.Plone.items(
app.Plone.HEAD__roles__                                         app.Plone.items__roles__
app.Plone.HTTPCache                                             app.Plone.keys(
app.Plone.Identifier(                                           app.Plone.keys__roles__
app.Plone.Identifier__roles__                                   app.Plone.language
app.Plone.LOCK(                                                 app.Plone.listContributors(
app.Plone.LOCK__roles__                                         app.Plone.listContributors__roles__
app.Plone.Language(                                             app.Plone.listCreators(
app.Plone.Language__roles__                                     app.Plone.listCreators__roles__
app.Plone.MKCOL(                                                app.Plone.listDAVObjects(
app.Plone.MKCOL_handler(                                        app.Plone.listDAVObjects__roles__
app.Plone.MOVE(                                                 app.Plone.listFolderContents(
app.Plone.MOVE__roles__                                         app.Plone.listFolderContents__roles__
app.Plone.MailHost                                              app.Plone.list_imports(
app.Plone.ModificationDate(                                     app.Plone.manage(
app.Plone.ModificationDate__roles__                             app.Plone.manage_CopyContainerAllItems(
app.Plone.OPTIONS(                                              app.Plone.manage_CopyContainerAllItems__roles__
app.Plone.OPTIONS__roles__                                      app.Plone.manage_CopyContainerFirstItem(
app.Plone.PROPFIND(                                             app.Plone.manage_CopyContainerFirstItem__roles__
app.Plone.PROPFIND__roles__                                     app.Plone.manage_DAVget(
app.Plone.PROPPATCH(                                            app.Plone.manage_DAVget__roles__
app.Plone.PROPPATCH__roles__                                    app.Plone.manage_FTPlist(
app.Plone.PUT(                                                  app.Plone.manage_FTPlist__roles__
app.Plone.PUT_factory(                                          app.Plone.manage_FTPstat(
app.Plone.PrincipiaFind(                                        app.Plone.manage_FTPstat__roles__
app.Plone.PrincipiaFind__roles__                                app.Plone.manage_UndoForm(
app.Plone.Publisher(                                            app.Plone.manage_UndoForm__roles__
app.Plone.Publisher__roles__                                    app.Plone.manage__roles__
app.Plone.RAMCache                                              app.Plone.manage_access(
app.Plone.REQUEST                                               app.Plone.manage_access__roles__
app.Plone.ResourceRegistryCache                                 app.Plone.manage_acquiredForm(
app.Plone.Rights(                                               app.Plone.manage_acquiredForm__roles__
app.Plone.Rights__roles__                                       app.Plone.manage_acquiredPermissions(
app.Plone.SQLConnectionIDs(                                     app.Plone.manage_acquiredPermissions__roles__
app.Plone.SQLConnectionIDs__roles__                             app.Plone.manage_addDTMLDocument(
app.Plone.SiteRootAdd(                                          app.Plone.manage_addDTMLDocument__roles__
app.Plone.SiteRootAdd__roles__                                  app.Plone.manage_addDTMLMethod(
app.Plone.Subject(                                              app.Plone.manage_addDTMLMethod__roles__
app.Plone.Subject__roles__                                      app.Plone.manage_addDocument(
app.Plone.TRACE(                                                app.Plone.manage_addDocument__roles__
app.Plone.TRACE__roles__                                        app.Plone.manage_addFile(
app.Plone.Title(                                                app.Plone.manage_addFile__roles__
app.Plone.Title__roles__                                        app.Plone.manage_addFolder(
app.Plone.Type(                                                 app.Plone.manage_addFolder__roles__
app.Plone.Type__roles__                                         app.Plone.manage_addImage(
app.Plone.UNLOCK(                                               app.Plone.manage_addImage__roles__
app.Plone.UNLOCK__roles__                                       app.Plone.manage_addLocalRoles(
app.Plone.ZQueryIds(                                            app.Plone.manage_addLocalRoles__roles__
app.Plone.ZQueryIds__roles__                                    app.Plone.manage_addOrderedFolder(
app.Plone.ZopeFind(                                             app.Plone.manage_addOrderedFolder__roles__
app.Plone.ZopeFindAndApply(                                     app.Plone.manage_addPortalFolder(
app.Plone.ZopeFindAndApply__roles__                             app.Plone.manage_addPortalFolder__roles__
app.Plone.ZopeFind__roles__                                     app.Plone.manage_addProduct
app.Plone._ATContentTypes__Add_Document_Permission              app.Plone.manage_addProperty(
app.Plone._ATContentTypes__Add_Event_Permission                 app.Plone.manage_addProperty__roles__
app.Plone._ATContentTypes__Add_File_Permission                  app.Plone.manage_addSiteRoot(
app.Plone._ATContentTypes__Add_Folder_Permission                app.Plone.manage_addSiteRootForm(
app.Plone._ATContentTypes__Add_Image_Permission                 app.Plone.manage_addSiteRootForm__roles__
app.Plone._ATContentTypes__Add_Link_Permission                  app.Plone.manage_addSiteRoot__roles__
app.Plone._ATContentTypes__Add_News_Item_Permission             app.Plone.manage_addUserFolder(
app.Plone._Access_arbitrary_user_session_data_Permission        app.Plone.manage_addUserFolder__roles__
app.Plone._Access_contents_information_Permission               app.Plone.manage_afterAdd(
app.Plone._Access_inactive_portal_content_Permission            app.Plone.manage_afterAdd__roles__
app.Plone._Access_session_data_Permission                       app.Plone.manage_afterClone(
app.Plone._Add_portal_content_Permission                        app.Plone.manage_afterClone__roles__
app.Plone._Add_portal_events_Permission                         app.Plone.manage_beforeDelete(
app.Plone._Add_portal_folders_Permission                        app.Plone.manage_beforeDelete__roles__
app.Plone._Add_portal_member_Permission                         app.Plone.manage_changeOwnershipType(
app.Plone._Allow_sendto_Permission                              app.Plone.manage_changeOwnershipType__roles__
app.Plone._CMFEditions__Access_previous_versions_Permission     app.Plone.manage_changePermissions(
app.Plone._CMFEditions__Apply_version_control_Permission        app.Plone.manage_changePermissions__roles__
app.Plone._CMFEditions__Checkout_to_location_Permission         app.Plone.manage_changeProperties(
app.Plone._CMFEditions__Revert_to_previous_versions_Permission  app.Plone.manage_changeProperties__roles__
app.Plone._CMFEditions__Save_new_version_Permission             app.Plone.manage_changePropertyTypes(
app.Plone._Change_local_roles_Permission                        app.Plone.manage_changePropertyTypes__roles__
app.Plone._Change_portal_events_Permission                      app.Plone.manage_clone(
app.Plone._Content_rules__Manage_rules_Permission               app.Plone.manage_clone__roles__
app.Plone._Copy_or_Move_Permission                              app.Plone.manage_copyObjects(
app.Plone._DefaultDublinCoreImpl__CEILING_DATE                  app.Plone.manage_copyObjects__roles__
app.Plone._DefaultDublinCoreImpl__FLOOR_DATE                    app.Plone.manage_copyright(
app.Plone._Delete_objects_Permission                            app.Plone.manage_copyright__roles__
app.Plone._FTP_access_Permission                                app.Plone.manage_cutObjects(
app.Plone._List_folder_contents_Permission                      app.Plone.manage_cutObjects__roles__
app.Plone._List_portal_members_Permission                       app.Plone.manage_defined_roles(
app.Plone._List_undoable_changes_Permission                     app.Plone.manage_defined_roles__roles__
app.Plone._Mail_forgotten_password_Permission                   app.Plone.manage_delLocalRoles(
app.Plone._Manage_properties_Permission                         app.Plone.manage_delLocalRoles__roles__
app.Plone._Modify_portal_content_Permission                     app.Plone.manage_delObjects(
app.Plone._Modify_view_template_Permission                      app.Plone.manage_delObjects__roles__
app.Plone._Portlets__Manage_own_portlets_Permission             app.Plone.manage_delProperties(
app.Plone._Portlets__Manage_portlets_Permission                 app.Plone.manage_delProperties__roles__
app.Plone._Portlets__View_dashboard_Permission                  app.Plone.manage_editLocalRoles(
app.Plone._Reply_to_item_Permission                             app.Plone.manage_editLocalRoles__roles__
app.Plone._Request_review_Permission                            app.Plone.manage_editMetadata(
app.Plone._Review_comments_Permission                           app.Plone.manage_editMetadata__roles__
app.Plone._Review_portal_content_Permission                     app.Plone.manage_editProperties(
app.Plone._Search_ZCatalog_Permission                           app.Plone.manage_editProperties__roles__
app.Plone._Set_own_password_Permission                          app.Plone.manage_editRoles(
app.Plone._Set_own_properties_Permission                        app.Plone.manage_editRoles__roles__
app.Plone._Undo_changes_Permission                              app.Plone.manage_editedDialog(
app.Plone._Use_Database_Methods_Permission                      app.Plone.manage_editedDialog__roles__
app.Plone._Use_external_editor_Permission                       app.Plone.manage_exportObject(
app.Plone._Use_mailhost_services_Permission                     app.Plone.manage_exportObject__roles__
app.Plone._Use_version_control_Permission                       app.Plone.manage_findAdv(
app.Plone._View_Groups_Permission                               app.Plone.manage_findAdv__roles__
app.Plone._View_History_Permission                              app.Plone.manage_findForm(
app.Plone._View_Permission                                      app.Plone.manage_findForm__roles__
app.Plone._View_management_screens_Permission                   app.Plone.manage_findFrame(
app.Plone._WebDAV_Lock_items_Permission                         app.Plone.manage_findFrame__roles__
app.Plone._WebDAV_Unlock_items_Permission                       app.Plone.manage_findResult(
app.Plone._WebDAV_access_Permission                             app.Plone.manage_findResult__roles__
app.Plone.__ZCacheManager_ids__                                 app.Plone.manage_fixupOwnershipAfterAdd(
app.Plone.__ac_local_roles__                                    app.Plone.manage_fixupOwnershipAfterAdd__roles__
app.Plone.__ac_permissions__                                    app.Plone.manage_form_title(
app.Plone.__ac_roles__                                          app.Plone.manage_form_title__roles__
app.Plone.__allow_access_to_unprotected_subobjects__            app.Plone.manage_getPermissionMapping(
app.Plone.__allow_groups__(                                     app.Plone.manage_getPermissionMapping__roles__
app.Plone.__before_publishing_traverse__(                       app.Plone.manage_getUserRolesAndPermissions(
app.Plone.__before_traverse__                                   app.Plone.manage_getUserRolesAndPermissions__roles__
app.Plone.__browser_default__(                                  app.Plone.manage_hasId(
app.Plone.__call__(                                             app.Plone.manage_hasId__roles__
app.Plone.__call____roles__                                     app.Plone.manage_importExportForm(
app.Plone.__class__(                                            app.Plone.manage_importExportForm__roles__
app.Plone.__class_init__(                                       app.Plone.manage_importObject(
app.Plone.__contains__(                                         app.Plone.manage_importObject__roles__
app.Plone.__dav_collection__                                    app.Plone.manage_index_main(
app.Plone.__dav_resource__                                      app.Plone.manage_index_main__roles__
app.Plone.__delattr__(                                          app.Plone.manage_listLocalRoles(
app.Plone.__delitem__(                                          app.Plone.manage_listLocalRoles__roles__
app.Plone.__dict__                                              app.Plone.manage_main(
app.Plone.__doc__                                               app.Plone.manage_main__roles__
app.Plone.__error_log__                                         app.Plone.manage_menu(
app.Plone.__format__(                                           app.Plone.manage_menu__roles__
app.Plone.__getattr__(                                          app.Plone.manage_metadata(
app.Plone.__getattribute__(                                     app.Plone.manage_metadata__roles__
app.Plone.__getitem__(                                          app.Plone.manage_move_objects_down(
app.Plone.__getstate__(                                         app.Plone.manage_move_objects_down__roles__
app.Plone.__hash__(                                             app.Plone.manage_move_objects_to_bottom(
app.Plone.__http_methods__                                      app.Plone.manage_move_objects_to_bottom__roles__
app.Plone.__implemented__(                                      app.Plone.manage_move_objects_to_top(
app.Plone.__init__(                                             app.Plone.manage_move_objects_to_top__roles__
app.Plone.__iter__(                                             app.Plone.manage_move_objects_up(
app.Plone.__len__(                                              app.Plone.manage_move_objects_up__roles__
app.Plone.__module__                                            app.Plone.manage_options
app.Plone.__name__                                              app.Plone.manage_owner(
app.Plone.__new__(                                              app.Plone.manage_owner__roles__
app.Plone.__nonzero__(                                          app.Plone.manage_page_footer(
app.Plone.__of__(                                               app.Plone.manage_page_footer__roles__
app.Plone.__old_manage_FTPlist(                                 app.Plone.manage_page_header(
app.Plone.__propsets__                                          app.Plone.manage_page_header__roles__
app.Plone.__providedBy__(                                       app.Plone.manage_page_style.css(
app.Plone.__provides__(                                         app.Plone.manage_page_style.css__roles__
app.Plone.__reduce__(                                           app.Plone.manage_pasteObjects(
app.Plone.__reduce_ex__(                                        app.Plone.manage_pasteObjects__roles__
app.Plone.__replaceable__                                       app.Plone.manage_permission(
app.Plone.__repr__(                                             app.Plone.manage_permissionForm(
app.Plone.__roles__                                             app.Plone.manage_permissionForm__roles__
app.Plone.__setattr__(                                          app.Plone.manage_permission__roles__
app.Plone.__setitem__(                                          app.Plone.manage_propertiesForm(
app.Plone.__setstate__(                                         app.Plone.manage_propertiesForm__roles__
app.Plone.__sizeof__(                                           app.Plone.manage_propertyTypeForm(
app.Plone.__str__(                                              app.Plone.manage_propertyTypeForm__roles__
app.Plone.__subclasshook__(                                     app.Plone.manage_renameForm(
app.Plone.__weakref__                                           app.Plone.manage_renameForm__roles__
app.Plone._addRole(                                             app.Plone.manage_renameObject(
app.Plone._at_fti_meta_type                                     app.Plone.manage_renameObject__roles__
app.Plone._canCopy(                                             app.Plone.manage_renameObjects(
app.Plone._checkId(                                             app.Plone.manage_renameObjects__roles__
app.Plone._components                                           app.Plone.manage_reportUserPermissions(
app.Plone._datify(                                              app.Plone.manage_reportUserPermissions__roles__
app.Plone._datify__roles__                                      app.Plone.manage_role(
app.Plone._default_sort_key                                     app.Plone.manage_roleForm(
app.Plone._default_sort_reverse                                 app.Plone.manage_roleForm__roles__
app.Plone._delOb(                                               app.Plone.manage_role__roles__
app.Plone._delObject(                                           app.Plone.manage_setLocalRoles(
app.Plone._delPropValue(                                        app.Plone.manage_setLocalRoles__roles__
app.Plone._delProperty(                                         app.Plone.manage_setPermissionMapping(
app.Plone._delRoles(                                            app.Plone.manage_setPermissionMapping__roles__
app.Plone._deleteOwnershipAfterAdd(                             app.Plone.manage_set_default_sorting(
app.Plone._editMetadata(                                        app.Plone.manage_set_default_sorting__roles__
app.Plone._editMetadata__roles__                                app.Plone.manage_tabs(
app.Plone._filteredItems(                                       app.Plone.manage_tabs__roles__
app.Plone._getCopy(                                             app.Plone.manage_takeOwnership(
app.Plone._getImportPaths(                                      app.Plone.manage_takeOwnership__roles__
app.Plone._getOb(                                               app.Plone.manage_top_frame(
app.Plone._getPortalTypeName(                                   app.Plone.manage_top_frame__roles__
app.Plone._getUNIQUE(                                           app.Plone.manage_undo_transactions(
app.Plone._get_id(                                              app.Plone.manage_undo_transactions__roles__
app.Plone._get_request_var_or_attr(                             app.Plone.manage_workspace(
app.Plone._has_user_defined_role(                               app.Plone.manage_workspace__roles__
app.Plone._importObjectFromFile(                                app.Plone.manage_zmi_logout(
app.Plone._isBeingUsedAsAMethod(                                app.Plone.manage_zmi_logout__roles__
app.Plone._manage_editedDialog(                                 app.Plone.manage_zmi_prefs(
app.Plone._normal_manage_access(                                app.Plone.manage_zmi_prefs__roles__
app.Plone._notifyOfCopyTo(                                      app.Plone.management_page_charset
app.Plone._objects                                              app.Plone.meta_type
app.Plone._old_filtered_manage_options(                         app.Plone.meta_types
app.Plone._owner                                                app.Plone.mimetypes_registry(
app.Plone._p_activate(                                          app.Plone.modification_date
app.Plone._p_changed                                            app.Plone.modified(
app.Plone._p_deactivate(                                        app.Plone.modified__roles__
app.Plone._p_delattr(                                           app.Plone.moveObject(
app.Plone._p_estimated_size                                     app.Plone.moveObjectToPosition(
app.Plone._p_getattr(                                           app.Plone.moveObjectToPosition__roles__
app.Plone._p_invalidate(                                        app.Plone.moveObject__roles__
app.Plone._p_jar                                                app.Plone.moveObjectsByDelta(
app.Plone._p_mtime                                              app.Plone.moveObjectsByDelta__roles__
app.Plone._p_oid                                                app.Plone.moveObjectsDown(
app.Plone._p_serial                                             app.Plone.moveObjectsDown__roles__
app.Plone._p_setattr(                                           app.Plone.moveObjectsToBottom(
app.Plone._p_state                                              app.Plone.moveObjectsToBottom__roles__
app.Plone._plone_app_collection__Add_Collection_Permission      app.Plone.moveObjectsToTop(
app.Plone._postCopy(                                            app.Plone.moveObjectsToTop__roles__
app.Plone._properties                                           app.Plone.moveObjectsUp(
app.Plone._propertyMap(                                         app.Plone.moveObjectsUp__roles__
app.Plone._reserved_names                                       app.Plone.notifyModified(
app.Plone._setId(                                               app.Plone.notifyModified__roles__
app.Plone._setOb(                                               app.Plone.objectIds(
app.Plone._setObject(                                           app.Plone.objectIds__roles__
app.Plone._setPortalTypeName(                                   app.Plone.objectIds_d(
app.Plone._setPropValue(                                        app.Plone.objectIds_d__roles__
app.Plone._setProperty(                                         app.Plone.objectItems(
app.Plone._setRoles(                                            app.Plone.objectItems__roles__
app.Plone._subobject_permissions(                               app.Plone.objectItems_d(
app.Plone._updateProperty(                                      app.Plone.objectItems_d__roles__
app.Plone._verifyObjectPaste(                                   app.Plone.objectMap(
app.Plone._wrapperCheck(                                        app.Plone.objectMap_d(
app.Plone.absolute_url(                                         app.Plone.objectMap_d__roles__
app.Plone.absolute_url__roles__                                 app.Plone.objectValues(
app.Plone.absolute_url_path(                                    app.Plone.objectValues__roles__
app.Plone.absolute_url_path__roles__                            app.Plone.objectValues_d(
app.Plone.ac_inherited_permissions(                             app.Plone.objectValues_d__roles__
app.Plone.ac_inherited_permissions__roles__                     app.Plone.opaqueIds(
app.Plone.access_debug_info(                                    app.Plone.opaqueIds__roles__
app.Plone.access_debug_info__roles__                            app.Plone.opaqueItems(
app.Plone.aclAChecked                                           app.Plone.opaqueItems__roles__
app.Plone.aclEChecked                                           app.Plone.opaqueValues(
app.Plone.aclPChecked                                           app.Plone.opaqueValues__roles__
app.Plone.acl_users(                                            app.Plone.orderObjects(
app.Plone.acquiredRolesAreUsedBy(                               app.Plone.orderObjects__roles__
app.Plone.acquiredRolesAreUsedBy__roles__                       app.Plone.owner_info(
app.Plone.addCreator(                                           app.Plone.owner_info__roles__
app.Plone.addCreator__roles__                                   app.Plone.permission_settings(
app.Plone.addDTMLDocument(                                      app.Plone.permission_settings__roles__
app.Plone.addDTMLDocument__roles__                              app.Plone.permissionsOfRole(
app.Plone.addDTMLMethod(                                        app.Plone.permissionsOfRole__roles__
app.Plone.addDTMLMethod__roles__                                app.Plone.plone_utils
app.Plone.aliases                                               app.Plone.portal_actionicons(
app.Plone.all_meta_types(                                       app.Plone.portal_actions
app.Plone.allowedContentTypes(                                  app.Plone.portal_archivist
app.Plone.allowedContentTypes__roles__                          app.Plone.portal_atct
app.Plone.analyseDocumentation(                                 app.Plone.portal_calendar
app.Plone.analyseDocumentation__roles__                         app.Plone.portal_catalog(
app.Plone.archetype_tool                                        app.Plone.portal_controlpanel
app.Plone.availableLanguages(                                   app.Plone.portal_css
app.Plone.availableLanguages__roles__                           app.Plone.portal_diff
app.Plone.bobobase_modification_time(                           app.Plone.portal_discussion
app.Plone.caching_policy_manager                                app.Plone.portal_factory(
app.Plone.canSetDefaultPage(                                    app.Plone.portal_form_controller(
app.Plone.canSetDefaultPage__roles__                            app.Plone.portal_groupdata
app.Plone.canSetLayout(                                         app.Plone.portal_groups
app.Plone.canSetLayout__roles__                                 app.Plone.portal_historiesstorage
app.Plone.cb_dataItems(                                         app.Plone.portal_historyidhandler
app.Plone.cb_dataValid(                                         app.Plone.portal_interface
app.Plone.cb_isCopyable(                                        app.Plone.portal_javascripts
app.Plone.cb_isMoveable(                                        app.Plone.portal_languages(
app.Plone.cb_userHasCopyOrMovePermission(                       app.Plone.portal_memberdata
app.Plone.changeOwnership(                                      app.Plone.portal_membership
app.Plone.changeOwnership__roles__                              app.Plone.portal_metadata
app.Plone.changeSkin(                                           app.Plone.portal_migration
app.Plone.changeSkin__roles__                                   app.Plone.portal_modifier
app.Plone.checkIdAvailable(                                     app.Plone.portal_password_reset
app.Plone.checkIdAvailable__roles__                             app.Plone.portal_properties
app.Plone.clearCurrentSkin(                                     app.Plone.portal_purgepolicy
app.Plone.clearCurrentSkin__roles__                             app.Plone.portal_quickinstaller
app.Plone.contentIds(                                           app.Plone.portal_referencefactories
app.Plone.contentIds__roles__                                   app.Plone.portal_registration
app.Plone.contentItems(                                         app.Plone.portal_registry
app.Plone.contentItems__roles__                                 app.Plone.portal_repository
app.Plone.contentValues(                                        app.Plone.portal_setup
app.Plone.contentValues__roles__                                app.Plone.portal_skins
app.Plone.content_type(                                         app.Plone.portal_tinymce
app.Plone.content_type_registry                                 app.Plone.portal_transforms(
app.Plone.contributors                                          app.Plone.portal_type
app.Plone.created(                                              app.Plone.portal_types
app.Plone.created__roles__                                      app.Plone.portal_uidannotation(
app.Plone.creation_date                                         app.Plone.portal_uidgenerator(
app.Plone.creators                                              app.Plone.portal_uidhandler
app.Plone.dav__init(                                            app.Plone.portal_undo
app.Plone.dav__simpleifhandler(                                 app.Plone.portal_url(
app.Plone.dav__validate(                                        app.Plone.portal_view_customizations
app.Plone.decodeFolderFilter(                                   app.Plone.portal_workflow
app.Plone.decodeFolderFilter__roles__                           app.Plone.possible_permissions(
app.Plone.defaultView(                                          app.Plone.propdict(
app.Plone.defaultView__roles__                                  app.Plone.propdict__roles__
app.Plone.default_view                                          app.Plone.propertyDescription(
app.Plone.description                                           app.Plone.propertyDescription__roles__
app.Plone.edit(                                                 app.Plone.propertyIds(
app.Plone.editMetadata(                                         app.Plone.propertyIds__roles__
app.Plone.editMetadata__roles__                                 app.Plone.propertyItems(
app.Plone.edit__roles__                                         app.Plone.propertyItems__roles__
app.Plone.effective(                                            app.Plone.propertyLabel(
app.Plone.effective__roles__                                    app.Plone.propertyLabel__roles__
app.Plone.effective_date                                        app.Plone.propertyMap(
app.Plone.email_charset                                         app.Plone.propertyMap__roles__
app.Plone.email_from_address                                    app.Plone.propertyValues(
app.Plone.email_from_name                                       app.Plone.propertyValues__roles__
app.Plone.enable_permalink                                      app.Plone.propertysheets
app.Plone.encodeFolderFilter(                                   app.Plone.raise_standardErrorMessage(
app.Plone.encodeFolderFilter__roles__                           app.Plone.reference_catalog(
app.Plone.error_log                                             app.Plone.reindexObject(
app.Plone.expiration_date                                       app.Plone.reindexObjectSecurity(
app.Plone.expires(                                              app.Plone.restrictedTraverse(
app.Plone.expires__roles__                                      app.Plone.restrictedTraverse__roles__
app.Plone.externalEditLink_(                                    app.Plone.rights
app.Plone.externalEdit_                                         app.Plone.rolesOfPermission(
app.Plone.filtered_manage_options(                              app.Plone.rolesOfPermission__roles__
app.Plone.filtered_manage_options__roles__                      app.Plone.selectable_views
app.Plone.filtered_meta_types(                                  app.Plone.selectedRoles
app.Plone.folderlistingFolderContents(                          app.Plone.setContributors(
app.Plone.folderlistingFolderContents__roles__                  app.Plone.setContributors__roles__
app.Plone.format                                                app.Plone.setCreators(
app.Plone.get(                                                  app.Plone.setCreators__roles__
app.Plone.getActionInfo(                                        app.Plone.setDefaultPage(
app.Plone.getActionInfo__roles__                                app.Plone.setDefaultPage__roles__
app.Plone.getAttribute(                                         app.Plone.setDefaultSorting(
app.Plone.getAttributeNode(                                     app.Plone.setDefaultSorting__roles__
app.Plone.getAttributeNode__roles__                             app.Plone.setDescription(
app.Plone.getAttribute__roles__                                 app.Plone.setDescription__roles__
app.Plone.getAttributes(                                        app.Plone.setEffectiveDate(
app.Plone.getAttributes__roles__                                app.Plone.setEffectiveDate__roles__
app.Plone.getAvailableLayouts(                                  app.Plone.setExpirationDate(
app.Plone.getAvailableLayouts__roles__                          app.Plone.setExpirationDate__roles__
app.Plone.getCMFObjectsSubsetIds(                               app.Plone.setFormat(
app.Plone.getChildNodes(                                        app.Plone.setFormat__roles__
app.Plone.getChildNodes__roles__                                app.Plone.setLanguage(
app.Plone.getCurrentSkinName(                                   app.Plone.setLanguage__roles__
app.Plone.getCurrentSkinName__roles__                           app.Plone.setLayout(
app.Plone.getDefaultLayout(                                     app.Plone.setLayout__roles__
app.Plone.getDefaultLayout__roles__                             app.Plone.setModificationDate(
app.Plone.getDefaultPage(                                       app.Plone.setModificationDate__roles__
app.Plone.getDefaultPage__roles__                               app.Plone.setRights(
app.Plone.getDefaultSorting(                                    app.Plone.setRights__roles__
app.Plone.getDefaultSorting__roles__                            app.Plone.setSiteManager(
app.Plone.getElementsByTagName(                                 app.Plone.setSiteManager__roles__
app.Plone.getElementsByTagName__roles__                         app.Plone.setSubject(
app.Plone.getFirstChild(                                        app.Plone.setSubject__roles__
app.Plone.getFirstChild__roles__                                app.Plone.setTitle(
app.Plone.getIcon(                                              app.Plone.setTitle__roles__
app.Plone.getIconURL(                                           app.Plone.setupCurrentSkin(
app.Plone.getIconURL__roles__                                   app.Plone.setupCurrentSkin__roles__
app.Plone.getIcon__roles__                                      app.Plone.showDocumentation(
app.Plone.getId(                                                app.Plone.showDocumentation__roles__
app.Plone.getId__roles__                                        app.Plone.smallRolesWidget
app.Plone.getIdsSubset(                                         app.Plone.subject
app.Plone.getIdsSubset__roles__                                 app.Plone.superValues(
app.Plone.getLastChild(                                         app.Plone.superValues__roles__
app.Plone.getLastChild__roles__                                 app.Plone.suppl_views
app.Plone.getLayout(                                            app.Plone.tabs_path_default(
app.Plone.getLayout__roles__                                    app.Plone.tabs_path_info(
app.Plone.getMetadataHeaders(                                   app.Plone.this(
app.Plone.getMetadataHeaders__roles__                           app.Plone.title
app.Plone.getNextSibling(                                       app.Plone.title_and_id(
app.Plone.getNextSibling__roles__                               app.Plone.title_or_id(
app.Plone.getNodeName(                                          app.Plone.tpURL(
app.Plone.getNodeName__roles__                                  app.Plone.tpValues(
app.Plone.getNodeType(                                          app.Plone.tpValues__roles__
app.Plone.getNodeValue(                                         app.Plone.translation_service
app.Plone.getNodeValue__roles__                                 app.Plone.uid_catalog(
app.Plone.getObjectPosition(                                    app.Plone.undoable_transactions(
app.Plone.getObjectPosition__roles__                            app.Plone.undoable_transactions__roles__
app.Plone.getOwner(                                             app.Plone.unindexObject(
app.Plone.getOwnerDocument(                                     app.Plone.unrestrictedTraverse(
app.Plone.getOwnerDocument__roles__                             app.Plone.unrestrictedTraverse__roles__
app.Plone.getOwnerTuple(                                        app.Plone.userCanTakeOwnership(
app.Plone.getOwnerTuple__roles__                                app.Plone.userdefined_roles(
app.Plone.getOwner__roles__                                     app.Plone.userdefined_roles__roles__
app.Plone.getParentNode(                                        app.Plone.users_with_local_role(
app.Plone.getParentNode__roles__                                app.Plone.validClipData(
app.Plone.getPhysicalPath(                                      app.Plone.validRoles(
app.Plone.getPhysicalPath__roles__                              app.Plone.valid_property_id(
app.Plone.getPhysicalRoot(                                      app.Plone.valid_property_id__roles__
app.Plone.getPhysicalRoot__roles__                              app.Plone.valid_roles(
app.Plone.getPortalTypeName(                                    app.Plone.validate_email
app.Plone.getPortalTypeName__roles__                            app.Plone.validate_roles(
app.Plone.getPreviousSibling(                                   app.Plone.values(
app.Plone.getPreviousSibling__roles__                           app.Plone.values__roles__
app.Plone.getProperty(                                          app.Plone.view(
app.Plone.getPropertyType(                                      app.Plone.virtual_url_path(
app.Plone.getPropertyType__roles__                              app.Plone.virtual_url_path__roles__
app.Plone.getProperty__roles__                                  app.Plone.wl_clearLocks(
app.Plone.getSiteManager(                                       app.Plone.wl_clearLocks__roles__
app.Plone.getSiteManager__roles__                               app.Plone.wl_delLock(
app.Plone.getSkin(                                              app.Plone.wl_delLock__roles__
app.Plone.getSkinNameFromRequest(                               app.Plone.wl_getLock(
app.Plone.getSkinNameFromRequest__roles__                       app.Plone.wl_getLock__roles__
app.Plone.getSkin__roles__                                      app.Plone.wl_hasLock(
app.Plone.getSkinsFolderName(                                   app.Plone.wl_isLocked(
app.Plone.getSkinsFolderName__roles__                           app.Plone.wl_isLockedByUser__roles__
app.Plone.getTagName(                                           app.Plone.wl_isLocked__roles__
app.Plone.getTagName__roles__                                   app.Plone.wl_lockItems(
app.Plone.getTypeInfo(                                          app.Plone.wl_lockItems__roles__
app.Plone.getTypeInfo__roles__                                  app.Plone.wl_lockTokens(
app.Plone.getWrappedOwner(                                      app.Plone.wl_lockTokens__roles__
app.Plone.getWrappedOwner__roles__                              app.Plone.wl_lockValues(
app.Plone.get__roles__                                          app.Plone.wl_lockValues__roles__
app.Plone.get_local_roles(                                      app.Plone.wl_lockmapping(
app.Plone.get_local_roles_for_userid(                           app.Plone.wl_lockmapping__roles__
app.Plone.get_valid_userids(                                    app.Plone.wl_setLock(
app.Plone.hasChildNodes(                                        app.Plone.wl_setLock__roles__
app.Plone.hasChildNodes__roles__                                app.Plone.zope_quick_start(
app.Plone.hasObject(                                            app.Plone.zope_quick_start__roles__
&lt;/pre&gt;
&lt;p&gt;(&lt;em&gt;You should probably&lt;/em&gt; &lt;a class="reference external" href="http://aclark.net"&gt;hire me&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a class="reference external" href="http://twitter.com/aclark4life"&gt;follow me on Twitter&lt;/a&gt; &lt;em&gt;or both&lt;/em&gt;.)&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Plone"></category><category term="Python"></category></entry></feed>